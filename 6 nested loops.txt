# Nested loops refer to the situation where you have one loop inside another loop. 
 - The inner loop will complete all its iterations before the outer loop finishes one iteration. 
 - This means that for each iteration of the outer loop, the inner loop will run completely through all its iterations.

# Example: 
rows = int(input("Enter the # of rows: "))
columns = int(input("Enter the # of columns: "))
symbol = input("Enter a symbol to use: ")

for x in range(rows):
   for y in range(columns):
       print(symbol, end="")
   print()
   
# Description:
- The user is prompted to enter the number of rows (rows variable), the number of columns (columns variable), and a symbol (symbol variable) to use for the pattern.
- The outer loop is represented by for x in range(rows):. This loop will iterate rows number of times. For each iteration of the outer loop, the inner loop will 
  execute completely.
- The inner loop is represented by for y in range(columns):. This loop will iterate columns number of times. For each iteration of the inner loop, the specified 
  symbol will be printed (print(symbol, end="")).
- The end="" argument in the print() function is used to ensure that the symbols are printed side by side in the same row, without a new line after each symbol.
- After each iteration of the inner loop, the print() function without any arguments is used to move to the next line, creating a new row for the pattern.

# Example Execution:
 - Let's say the user inputs rows = 3, columns = 5, and symbol = "*". The output will be:
  '*****
   *****
   *****'
 
# Explanation: 
- The program creates a pattern of 3 rows and 5 columns using the '' symbol. 
- The inner loop prints five " symbols in a row, and this process is repeated three times to create three rows of the pattern.
